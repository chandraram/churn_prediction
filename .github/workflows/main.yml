# # #converstion store in s3 bucket
# # name: 🚀 Churn Prediction CI/CD

# # on:
# #   push:
# #     branches: [ main ]

# # jobs:
# #   build-train-dockerize:
# #     runs-on: ubuntu-latest

# #     steps:
# #       - name: 🧾 Checkout code
# #         uses: actions/checkout@v3

# #       - name: 🐍 Set up Python 3.10
# #         uses: actions/setup-python@v4
# #         with:
# #           python-version: '3.10'

# #       - name: 📦 Install dependencies
# #         run: |
# #           python -m pip install --upgrade pip
# #           pip install -r requirements.txt

# #       - name: 🧠 Train ML model
# #         run: python train_model.py

# #       - name: 🔍 Syntax check FastAPI app
# #         run: python -m py_compile main.py

# #       - name: 🐳 Set up Docker Buildx
# #         uses: docker/setup-buildx-action@v3

# #       - name: 🔐 Log in to Docker Hub
# #         uses: docker/login-action@v3
# #         with:
# #           username: ${{ secrets.DOCKER_USERNAME }}
# #           password: ${{ secrets.DOCKER_PASSWORD }}

# #       - name: 🐳 Build and Push Docker image
# #         uses: docker/build-push-action@v4
# #         with:
# #           context: .
# #           push: true
# #           tags: rampucsd15/churn-api:latest

# #   deploy-to-ec2:
# #     needs: build-train-dockerize
# #     runs-on: ubuntu-latest

# #     steps:
# #       - name: 🚀 Deploy to EC2 via SSH
# #         uses: appleboy/ssh-action@v0.1.10
# #         with:
# #           host: 44.203.163.174
# #           username: ubuntu
# #           key: ${{ secrets.EC2_SSH_KEY }}
# #           script: |
# #             docker pull rampucsd15/churn-api:latest
# #             docker stop churn-api || true && docker rm churn-api || true
# #             docker run -d -p 80:8000 --name churn-api rampucsd15/churn-api:latest


# name: 🚀 Churn Prediction CI/CD

# on:
#   push:
#     branches: [ main ]

# jobs:
#   build-train-dockerize:
#     runs-on: ubuntu-latest

#     steps:
#       - name: 🧾 Checkout code
#         uses: actions/checkout@v3

#       - name: 🐍 Set up Python 3.10
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       - name: 📦 Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: 🧠 Train ML model
#         run: python train_model.py

#       - name: 🔍 Syntax check FastAPI app
#         run: python -m py_compile main.py

#       - name: 🐳 Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: 🔐 Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: 🐳 Build and Push Docker image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           push: true
#           tags: rampucsd15/churn-api:latest

#       - name: ☁️ Upload logs or models to S3
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_DEFAULT_REGION: us-east-1  # Change if needed
#         run: |
#           pip install awscli
#           aws s3 cp ./model/churn_model.pkl s3://churn79327/models/churn_model.pkl
#           aws s3 cp ./model/scaler.pkl s3://churn79327/models/scaler.pkl
#           aws s3 cp ./model/encoder.pkl s3://churn79327/models/encoder.pkl

#   deploy-to-ec2:
#     needs: build-train-dockerize
#     runs-on: ubuntu-latest

#     steps:
#       - name: 🚀 Deploy to EC2 via SSH
#         uses: appleboy/ssh-action@v0.1.10
#         with:
#           host: 44.203.163.174
#           username: ubuntu
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             docker pull rampucsd15/churn-api:latest
#             docker stop churn-api || true && docker rm churn-api || true
#             docker run -d -p 80:8000 --name churn-api rampucsd15/churn-api:latest


name: 🚀 Churn Prediction CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-train-dockerize:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: 🐍 Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🧠 Train ML model
        run: python train_model.py

      - name: 🔍 Syntax check FastAPI app
        run: python -m py_compile main.py

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐳 Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: rampucsd15/churn-api:latest

      - name: ☁️ Upload model files to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          pip install awscli
          aws s3 cp ./model/churn_model.pkl s3://churn79327/models/churn_model.pkl
          aws s3 cp ./model/scaler.pkl s3://churn79327/models/scaler.pkl
          aws s3 cp ./model/encoder.pkl s3://churn79327/models/encoder.pkl

  deploy-to-ec2:
    needs: build-train-dockerize
    runs-on: ubuntu-latest

    steps:
      - name: 🚀 Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 44.203.163.174
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull rampucsd15/churn-api:latest
            docker stop churn-api || true && docker rm churn-api || true
            docker run -d -p 80:8000 \
              -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
              -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
              -e AWS_DEFAULT_REGION=us-east-1 \
              -e S3_BUCKET_NAME=churn79327 \
              --name churn-api rampucsd15/churn-api:latest
